language: go

go:
  - 1.13.x
  - tip

os:
  - linux

install:
  - GO111MODULE=on go mod vendor

branches:
  only:
    - master
    - /^v[0-9]+\.[0-9]+\.[0-9]+$/

script:
  - if [ -n "$(gofmt -s -l . | grep -v "vendor")" ]; then diff -u <(echo -n) <(gofmt -d $(gofmt -s -l . | grep -v "vendor")); fi
  - GO111MODULE=on go test -v -race -coverprofile=coverage.txt ./...

after_success:
  - bash <(curl -s https://codecov.io/bash)

jobs:
  include:
    - stage: tag
      name: "Tag For Release"
      if: branch = master
      before_script:
        - echo -e "machine github.com\n  login $GH_TOKEN" > ~/.netrc
      script:
        - export OLD_VERSION=$(make version)
        - git config --global user.name "kristinaspring"
        - git config --global user.email "kmspring57@gmail.com"
        - export TAG=$(cat CHANGELOG.md | perl -0777 -ne 'print "$1" if /.*## \[Unreleased\]\s+## \[(v\d+.\d+.\d+)\].*/s')
        - export TODAY=`date +'%m/%d/%Y'`
        - export NOTES=$(cat CHANGELOG.md | perl -0777 -ne 'print "$ENV{TODAY}\n\n$1\n" if /.*## \[$ENV{TAG}\]\s(.*?)\s+## \[(v\d+.\d+.\d+)\].*/s')
        - if [[ "$TAG" != "" && "$TAG" != "$OLD_VERSION" ]]; then git tag -a "$TAG" -m "$NOTES"; git push origin --tags; echo $?; fi
    - stage: release
      name: "Make a Release"
      if: branch != master
      script: skip
      before_deploy:
        - make release-artifacts
      deploy:
        on:
          all_branches: true
          tags: true
        provider: releases
        api_key: "$GH_TOKEN"
        file: ./.ignore/*
        skip_cleanup: true
